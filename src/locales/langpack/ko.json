{
    "start_button": "시작하기",
    "input.": "토큰",
    "input.token": "클래스 토큰을 입력하세요",
    "generate.token": "토큰 생성",
    "closed": "닫기",
    "next": "다음으로",
    "submit": "완료",
    "add": "추가",

    "gtoken": "클래스룸 입장 토큰 (제출용)",
    "itoken": "클래스룸 관리 토큰 (채점자용)",

    "detail.1.1": "소스 코드를 업로드합니다.",
    "detail.1.2": "제출 방식은 .zip 또는 Github URL이 될 수 있습니다.",
    "detail.2.1": "정적 분석 및 채점 기준,",
    "detail.2.2": "여러 테스트 케이스로 제출된 과제를 채점합니다.",
    "detail.3.1": "도표를 활용해", 
    "detail.3.2": "채점 결과를 시각화합니다.",

    "entrance.class title": "클래스 입장",
    "entrance.class detail": "미리 받은 클래스 토큰을 이용해 강의실에 입장합니다.",

    "entrance.instructor title": "과제를 만드는 채점자이신가요?",
    "entrance.instructor detail.1": "토큰을 생성해",
    "entrance.instructor detail.2": "클래스를 만들 수 있습니다.",
    "entrance.instructor detail.3": "이미 토큰이 있으신가요?",
    "entrance.instructor detail.4": "토큰을 입력해 클래스를 관리하세요!",
    "entrance.instructor.tdialog.1": "토큰 생성 및 설정",
    "entrance.instructor.tdialog.e": "",
    "entrance.instructor.tdialog.2": "피드백 즉시 제공",
    "entrance.instructor.tdialog.3": "을 체크하면 모든 채점 결과를 학생에게 즉시 제공합니다.",
    "entrance.instructor.tdialog.4": "체크를 해제하면, 결과는 데이터베이스에만 저장되며 학생에게 보여지지 않습니다.",
    "package path": "패키지 경로",
    "class name": "클래스 네임",
    "method name": "메서드 네임",
    "interface name": "인터페이스 네임",
    "instructor name": "개설자 이름",

    "dialog.1": "채점 기준",
    "dialog.2": "정적 분석을 통해 검사할 항목을 선택할 수 있습니다.",

    "policy.count.methods": "최소 메서드 개수",
    "policy.count.fields": "최소 필드 개수",
    "policy.count.enhance": "Enhanced for 개수",
    "policy.count.1": "세부 구현사항 개수",
    "policy.count.2": "전체 소스 코드를 기반으로 개수를 세며, 하나라도 기준에 어긋나면 오답 처리합니다.",
    "policy.basic.deduct.boolean": "위반 시 감점할 점수",
    "policy.basic.deduct": "각 항목 당 감점할 점수",
    "policy.basic.max": "최대 감점 점수",
    "policy.class.1": "필수 구현 클래스",
    "policy.class.2": "필수로 구현해야 할 클래스가 있나요?",
    "policy.compiled.1": "컴파일 여부",
    "policy.compiled.2": "채점의 기본, 컴파일은 반드시 되어야 하겠죠?",
    "policy.custom.ds.1": "사용자 정의 자료구조 클래스",
    "policy.custom.ds.2": "사용자가 직접 정의한 자료구조 클래스가 필요한가요?",
    "policy.custom.ex.1": "사용자 정의 예외처리 클래스",
    "policy.custom.ex.2": "사용자가 직접 정의한 예외 처리 클래스가 필요한가요?",
    "policy.encap.1": "캡슐화 사용 여부",
    "policy.encap.2": "Access modifier를 사용해 캡슐화 규칙을 지켰는지 판단합니다.",
    "policy.interface.1": "인터페이스 상속 여부",
    "policy.interface.2": "인터페이스를 적절히 만들고 상속했는지 판단합니다.",
    "policy.io.1": "테스트 케이스",
    "policy.io.2": "제출 코드를 실행하면서 검사할 케이스를 추가합니다.",
    "policy.io.input": "입력값",
    "policy.io.output": "출력값",
    "policy.javadoc.1": "자바독 설정",
    "policy.javadoc.2": "모든 public 필드, 메소드는 자바독이 작성되어야 합니다.",
    "policy.overloading.1": "오버로딩 검사",
    "policy.overloading.2": "어떤 메서드가 오버로딩되어야 하나요?",
    "policy.overriding.1": "오버라이딩 검사",
    "policy.overriding.2": "어떤 메서드가 오버라이딩되어야 하나요?",
    "policy.package.1": "필수 구현 패키지",
    "policy.package.2": "패키지 경로를 지정하려면 입력하세요!",
    "policy.super.1": "슈퍼 클래스 상속 여부",
    "policy.super.2": "슈퍼 클래스 상속 여부를 판단합니다.",
    "policy.thread.1": "스레드 설정",
    "policy.thread.2": "스레드 클래스를 상속받고 실제로 사용했는지 판단합니다.",

    "begin.getting start": "지금 시작하세요.",
    "begin.enter token": "인증 토큰을 입력해",
    "begin.enter token rest": "현재 열린 클래스에 입장합니다.",
    "begin.enter generate pre": "클래스를 운영하고 싶으신가요?",
    "begin.enter generate token": "인증 토큰을 발행",
    "begin.enter generate rest": "할 수 있습니다."
}